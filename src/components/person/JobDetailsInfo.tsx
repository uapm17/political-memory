import React from "react";
import { Card, CardBody, Link } from "@nextui-org/react";
import CountryFlag from "@/src/common/counties/CountryFlag";
import { Institution } from "@/src/entities/institutions/Institution";
import { typesColorMap } from "@/src/entities/institutions/institutions.utils";
import { JobDetails } from "@/src/entities/persons/Person";
import { Button } from "@nextui-org/button";
import { Image } from "@nextui-org/image";
import { Chip } from "@nextui-org/react";
import { format } from "date-fns";

const linksTitleMap = new Map<string, string>([
  [
    "electronicSystemRegistries",
    "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –¥–µ–ø—É—Ç–∞—Ç–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏",
  ],
  [
    "electronicBillLegislativeActivity",
    '–ó–∞–∫–æ–Ω–æ—Ç–≤–æ—Ä—á–∞ –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º—ñ "–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏–π –∑–∞–∫–æ–Ω–æ–ø—Ä–æ–µ–∫—Ç"',
  ],
  ["legislativeActivity", "–ó–∞–∫–æ–Ω–æ—Ç–≤–æ—Ä—á–∞ –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å"],
  ["fractionsMovement", "–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Ñ—Ä–∞–∫—Ü—ñ—è—Ö"],
  ["reports", "–î–µ–ø—É—Ç–∞—Ç—Å—å–∫—ñ –∑–∞–ø–∏—Ç–∏"],
  ["speechesChronology", "–•—Ä–æ–Ω–æ–ª–æ–≥—ñ—è –≤–∏—Å—Ç—É–ø—ñ–≤ –¥–µ–ø—É—Ç–∞—Ç–∞"],
  ["voting", "–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –¥–µ–ø—É—Ç–∞—Ç–∞"],
  ["convocationPositions", "–ü–æ—Å–∞–¥–∏ –ø—Ä–æ—Ç—è–≥–æ–º —Å–∫–ª–∏–∫–∞–Ω–Ω—è"],
]);

type LinksProps = {
  links: Record<string, string>;
  title: string;
};

const Links = ({ title, links }: LinksProps) => {
  const linksList = Object.entries(links).map(([key, value]) => ({
    title: linksTitleMap.get(key) || "–ü–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º",
    value,
  }));

  if (linksList.length === 0) {
    return null;
  }

  return (
    <div className="flex flex-col mb-4">
      <p className="text-tiny uppercase font-bold">{title}</p>
      <ul className="flex flex-col">
        {linksList.map(({ title, value }) => (
          <Link
            key={value}
            href={value}
            underline="hover"
            showAnchorIcon
            target="_blank"
            className="text-sm text-default-500 pl-2 pb-1"
          >
            {title}
          </Link>
        ))}
      </ul>
    </div>
  );
};

type InfoRecordProps = {
  title: string;
  value: string | number;
};

const InfoRecord = ({ value, title }: InfoRecordProps) => {
  if (!value) {
    return null;
  }
  return (
    <div className="flex flex-col mb-4">
      <p className="text-tiny uppercase font-bold">{title}</p>
      <small className="text-default-500 capitalize">{value}</small>
    </div>
  );
};

type InfoListProps = {
  title: string;
  value: string[];
  listMarker?: string;
};

const InfoList = ({ value, title, listMarker = "" }: InfoListProps) => {
  if (value.length === 0) {
    return null;
  }
  return (
    <div className="flex flex-col mb-4">
      <p className="text-tiny uppercase font-bold">{title}</p>
      <ul className="flex flex-col">
        {value.map((item) => (
          <li key={item} className="text-sm text-default-500 pl-2 pb-1">
            {`${listMarker} ${item}`}
          </li>
        ))}
      </ul>
    </div>
  );
};

interface JobHistoryRecordProps {
  jobDetails: JobDetails;
}

export default function JobDetailsInfo({ jobDetails }: JobHistoryRecordProps) {
  const {
    type,
    convocationNumber,
    choosenBy,
    party,
    listNumber,
    jobStart,
    position,
    otherPositions,
    generalInfo,
    links,
    fullTimeAssistants,
    volonteerAssistants,
  } = jobDetails;

  if (type !== "uaDeputy") {
    return null;
  }

  return (
    <Card
      isBlurred
      className="border-none bg-background/60 dark:bg-default-100/50 max-w-[610px]"
      shadow="none"
    >
      <CardBody className="grid grid-cols-12  justify-center">
        <div className="flex flex-col col-span-12">
          <InfoRecord title="–°–∫–ª–∏–∫–∞–Ω–Ω—è –í–†" value={convocationNumber} />
          <InfoRecord title="–ü–æ–∑–∏—Ü—ñ—è" value={position} />
          <InfoRecord title="–û–±—Ä–∞–Ω–∏–π –ø–æ" value={choosenBy} />
          <InfoRecord title="–ü–∞—Ä—Ç—ñ—è" value={party} />
          <InfoRecord title="–ù–æ–º–µ—Ä —É —Å–ø–∏—Å–∫—É" value={listNumber} />
          <InfoRecord
            title="–î–∞—Ç–∞ –Ω–∞–±—É—Ç—Ç—è –¥–µ–ø—É—Ç–∞—Ç—Å—å–∫–∏—Ö –ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω—å"
            value={jobStart && format(jobStart, "dd.MM.yyyy")}
          />
          <InfoRecord title="–í—ñ–¥–æ–º–æ—Å—Ç—ñ –Ω–∞ –º–æ–º–µ–Ω—Ç –æ–±—Ä–∞–Ω–Ω—è" value={generalInfo} />
          <InfoList title="–†–æ–ª—å —É –í–†" listMarker="‚òùÔ∏è" value={otherPositions} />
          <Links title="–ü–æ—Å–∏–ª–∞–Ω–Ω—è" links={links} />
          <InfoList
            title="–ü–æ–º—ñ—á–Ω–∏–∫–∏ –Ω–∞ –ø–æ—Å—Ç—ñ–π–Ω—ñ–π –æ—Å–Ω–æ–≤—ñ"
            listMarker="ü§ù"
            value={fullTimeAssistants}
          />
          <InfoList
            title="–ü–æ–º—ñ—á–Ω–∏–∫–∏ –Ω–∞ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—å–∫—ñ–π –æ—Å–Ω–æ–≤—ñ"
            listMarker="ü§ù"
            value={volonteerAssistants}
          />
        </div>
      </CardBody>
    </Card>
  );
}
